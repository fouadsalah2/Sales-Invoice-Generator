/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.fouad.sig.Frams;

import com.fouad.sig.model.FileOperations;
import com.fouad.sig.model.InvoiceTableModel;
import com.fouad.sig.model.ItemTableModel;
import com.fouad.sig.model.SalesInvoice;
import com.fouad.sig.model.SalesInvoiceLine;
import com.fouad.sig.util.Extentions;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Fouad
 */
public class InvoicesFram extends javax.swing.JFrame {

    FileOperations _fileOperation;

    /**
     * Creates new form InvoicesFram
     */
    public InvoicesFram() {
        initComponents();
        _fileOperation = new FileOperations(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableInvoices = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        panelItems = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableItems = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtInvoiceDate = new javax.swing.JTextField();
        txtCustomerName = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        lblNumber = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("asdfasdf");
        setBackground(new java.awt.Color(255, 255, 255));

        tableInvoices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.", "Date", "Customer", "Total"
            }
        ));
        jScrollPane1.setViewportView(tableInvoices);

        jLabel1.setText("Invoices Table");

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnCreate.setText("Create New Invoice");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Invoice");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        panelItems.setBorder(javax.swing.BorderFactory.createTitledBorder("Invoice Items"));
        panelItems.setName(""); // NOI18N

        tableItems.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tableItemsPropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(tableItems);

        javax.swing.GroupLayout panelItemsLayout = new javax.swing.GroupLayout(panelItems);
        panelItems.setLayout(panelItemsLayout);
        panelItemsLayout.setHorizontalGroup(
            panelItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelItemsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelItemsLayout.setVerticalGroup(
            panelItemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelItemsLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setText("Invoice Number");

        jLabel3.setText("Invoice Date");

        jLabel4.setText("Customer Name");

        jLabel5.setText("Invoice Total");

        lblTotal.setText("0.00");

        lblNumber.setText("-");

        menuBar.setName("SIG - Sales Invoice Generator - Fouad Salah"); // NOI18N

        fileMenu.setText("File");
        fileMenu.setName("fileMenu"); // NOI18N

        openMenuItem.setText("Load File");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setText("Save File");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTotal)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtInvoiceDate, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                                        .addComponent(txtCustomerName))
                                    .addComponent(lblNumber)))
                            .addComponent(panelItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btnCreate)
                .addGap(140, 140, 140)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(140, 140, 140)
                .addComponent(btnCancel)
                .addGap(96, 96, 96))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnCreate, btnDelete, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(panelItems, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(lblNumber))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtInvoiceDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(lblTotal)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 13, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(btnCreate)
                    .addComponent(btnCancel))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        ClearInvoice();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        _invoice = new SalesInvoice();
        _invoice.setNo(GetNewInvoiceNumber());

        _lines = new ArrayList();
        _lines.add(new SalesInvoiceLine());
        ShowInvoice(_invoice);

    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        if (_invoice == null) {
            JOptionPane.showMessageDialog(null, "Please select or create new invoice");
            return;
        }

        if (!validateItem()) {
            return;
        }

        _invoice.setNo(Integer.parseInt(lblNumber.getText()));
        _invoice.setCustomer(txtCustomerName.getText());
        _invoice.setDate(Extentions.ParseDate(txtInvoiceDate.getText()));

        _invoice.SetItemLines(_lines);

        if (_invoice.getTotal().compareTo(BigDecimal.ZERO) == 0) {
            JOptionPane.showMessageDialog(null, "Inovice total can't be zero");
            return;
        }

        boolean bFound = false;
        for (int i = 0; i < _invoices.size(); i++) {
            var inv = _invoices.get(i);
            if (inv.getNo() == _invoice.getNo()) {
                inv.set(_invoice);
                bFound = true;
                break;
            }
        }

        if (!bFound) {
            _invoices.add(_invoice);
        }

        ShowInvoices();

        ClearInvoice();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tableItemsPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tableItemsPropertyChange
        var pname = evt.getPropertyName();
        if (pname.equals("tableCellEditor")) {
            try {
                var m = (ItemTableModel) tableItems.getModel();
                m.CreateNewRow();
            } catch (Throwable e) {

            }
        }

    }//GEN-LAST:event_tableItemsPropertyChange

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        var index = tableInvoices.getSelectedRow();        // TODO add your handling code here:
        if (index >= 0) {
            //var inv = _invoices.get(index);
            _invoices.remove(index);
            ShowInvoices();
            ClearInvoice();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        try {
            _invoices = _fileOperation.ReadFile();
            ClearInvoice();
            ShowInvoices();
        } catch (Exception t) {
            JOptionPane.showMessageDialog(this,t.getMessage(), "Error" , JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        
        try {
         _fileOperation.SaveFile(_invoices);
          JOptionPane.showMessageDialog(this,"Files saving completed sucessfully", "Information",  JOptionPane.INFORMATION_MESSAGE);
        
        } catch (Exception t) {
            JOptionPane.showMessageDialog(this,t.getMessage(), "Error" , JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_saveMenuItemActionPerformed

   

    

    private void ShowInvoices() {

        tableInvoices.getSelectionModel().addListSelectionListener(new RowSelectionListener());
        tableInvoices.setModel(new InvoiceTableModel(_invoices));
    }

    private void ShowInvoice(SalesInvoice inv) {
        if (inv == null) {
            return;
        }
        lblNumber.setText("" + inv.getNo());
        txtCustomerName.setText(inv.getCustomer());
        txtInvoiceDate.setText(Extentions.DateToString(inv.getDate()));
        lblTotal.setText(String.format("%.2f", inv.getTotal()));

        tableItems.setModel(new ItemTableModel(_lines));
    }

    private void ClearInvoice() {
        _invoice = null;
        lblNumber.setText("-");
        txtCustomerName.setText("");
        txtInvoiceDate.setText("");

        _lines.clear();
        _lines = new ArrayList<>();
        tableItems.setModel(new ItemTableModel(_lines));

    }

    private int GetNewInvoiceNumber() {
        var maxNo = _invoices.isEmpty() ? 0 : _invoices.stream()
                .mapToInt(x -> x.getNo())
                .max().getAsInt();

        return maxNo + 1;
    }

    private boolean validateItem() {

        if (txtInvoiceDate.getText().isEmpty() || txtInvoiceDate.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Inovice date is not valid");
            return false;
        }

        var dtStr = txtInvoiceDate.getText();

        if (Extentions.ParseDate(dtStr) == null) {
            JOptionPane.showMessageDialog(null, "Inovice date is not valid");
            return false;
        }

        if (txtCustomerName.getText().isEmpty() || txtCustomerName.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "customer name is not valid");
            return false;
        }

        return true;
    }

    private SalesInvoice GetSelectedInvoice(int invNo) {
        return _invoices.stream().filter(x -> x.getNo() == invNo).findFirst().orElse(null);
    }

    private class MyTable extends JTable {

        public MyTable(ItemTableModel model) {
            super(model);
        }

        @Override
        public ItemTableModel getModel() {
            return (ItemTableModel) super.getModel();
        }

        @Override
        public void editingStopped(ChangeEvent e) {
            int row = getEditingRow();
            int col = getEditingColumn();
            super.editingStopped(e);
            if (row == getRowCount() - 1 && col == getColumnCount() - 1) {

                getModel().CreateNewRow();
            }
        }
    }

    public class RowSelectionListener implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent event) {

            int viewRow = tableInvoices.getSelectedRow();

            if (!event.getValueIsAdjusting() && viewRow != -1) {

                int columnIndex = 0;

                // Better to access table row using modelRow rather than viewRow
                int modelRow = tableInvoices.convertRowIndexToModel(viewRow);

                // Access value at selected row at the second column (columnIndex = 1)
                Object modelvalue = tableInvoices.getModel().getValueAt(modelRow, columnIndex);

                // Not recommended: same as above but access row using viewRow
                Object tablevalue = tableInvoices.getValueAt(viewRow, columnIndex);

                // Print cell value
                System.out.println(modelvalue + "=" + tablevalue);

                //    var v = Integer.valueOf((String) modelvalue);
                var v = (Integer) modelvalue;

                var invoice = GetSelectedInvoice(v);
                if (invoice == null) {
                    return;
                }

                _lines = new ArrayList();
                _lines.addAll(invoice.getItemLines());
                _lines.add(new SalesInvoiceLine());

                _invoice = invoice;
                ShowInvoice(_invoice);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoicesFram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoicesFram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoicesFram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoicesFram.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new InvoicesFram().setVisible(true);
        });
    }

    private SalesInvoice _invoice = null;
    private List<SalesInvoice> _invoices = new ArrayList<>();
    private List<SalesInvoiceLine> _lines = new ArrayList<>();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JPanel panelItems;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTable tableInvoices;
    private javax.swing.JTable tableItems;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtInvoiceDate;
    // End of variables declaration//GEN-END:variables

}
